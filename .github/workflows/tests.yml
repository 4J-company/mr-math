name: Tests

on:
  push:
    branches: [ "master", "core/*" ]
  pull_request:
    branches: [ "master", "core/*" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-24.04, windows-latest, macos-latest]
        build_type: [Release, Debug]
        c_compiler: [gcc, clang, cl]
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-24.04
            c_compiler: cl
          - os: macos-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build/${{ matrix.build_type }}" >> "$GITHUB_OUTPUT"

    - name: Set up cache
      id: cache-cpm
      uses: actions/cache@v4
      with:
        path: ~/cpm-cache
        key: ${{ runner.os }}-cpm-${{ hashFiles('**/') }}
        restore-keys: |
          ${{ runner.os }}-cpm-a

    - name: Install Conan
      uses: conan-io/setup-conan@v1
      with:
        cache_packages: true
 
    - name: Setup local Conan index
      run: >
        git clone https://github.com/4J-company/conan-center-index.git &&
        conan remote add 4J-company ./conan-center-index --type local-recipes-index

    - name: Build (Clang)
      if: ${{ matrix.c_compiler == 'clang' }}
      run: >
        conan build .
        -b missing
        -o '&:target=tests'
        -s compiler=clang
        -s compiler.version=15
        -s compiler.cppstd=23
        -s build_type=${{ matrix.build_type }}
    
    - name: Build (GCC)
      if: ${{ matrix.c_compiler == 'gcc' }}
      run: >
        conan build .
        -b missing
        -o '&:target=tests'
        -s compiler=gcc
        -s compiler.version=13
        -s compiler.cppstd=23
        -s build_type=${{ matrix.build_type }}

    - name: Build (MSVC)
      if: ${{ matrix.c_compiler == 'cl' }}
      run: >
        conan build .
        -b missing
        -o '&:target=tests'
        -s compiler=msvc
        -s compiler.version=193
        -s compiler.cppstd=23
        -s build_type=${{ matrix.build_type }}

    - name: Run tests
      if: ${{ matrix.os != 'windows-latest' }}
      run: ${{ steps.strings.outputs.build-output-dir }}/tests/mr-math-tests

    - name: Run tests (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      run: iex "${{ steps.strings.outputs.build-output-dir }}/tests/mr-math-tests.exe".Replace('/', '\')
